CREATE database PhotoBlog;
create user 'testuser'@'localhost' identified by 'password';
grant all on PhotoBlog.* to 'testuser'@'localhost';

use PhotoBlog;

CREATE TABLE IF NOT EXISTS 'POSTS' (
'ID' INT(10) NOT NULL AUTO_INCREMENT,
'CREATION_TIME' TIMESTAMP,
'STATUS' TINYINT(2),
'NUMBER_OF_VISITS' INT(10),
'SUBJECT_EN' VARCHAR(100),
'SUBJECT_RU' VARCHAR(100),
'SHORT_EN' VARCHAR(200),
'SHORT_RU' VARCHAR(200),
'BODY_EN' TEXT,
'BODY_RU' TEXT
PRIMARY KEY ('id'));
	
CREATE TABLE IF NOT EXISTS 'PHOTOS' (
'ID' INT(10) NOT NULL AUTO_INCREMENT,
'CREATION_TIME' TIMESTAMP,
'STATUS' TINYINT(2),
'NUMBER_OF_VISITS' INT(10),
'DESCRIPTION_EN' VARCHAR(255),
'DESCRIPTION_RU' VARCHAR(255),
PRIMARY KEY ('id'));

CREATE TABLE IF NOT EXISTS 'COMMENTS' (
'ID' INT(10) NOT NULL AUTO_INCREMENT,
'CREATION_TIME' TIMESTAMP,
'STATUS' TINYINT(2),
'NUMBER_OF_VISITS' INT(10),
'BODY' VARCHAR(2000)
PRIMARY KEY ('id'));

CREATE TABLE IF NOT EXISTS 'Advertisements' (
'ID' INT(10) NOT NULL AUTO_INCREMENT,
'CREATION_TIME' TIMESTAMP,
'STATUS' TINYINT(2),
PRIMARY KEY ('id'));

CREATE TABLE IF NOT EXISTS 'Users' (
'ID' LONGINT NOT NULL AUTO_INCREMENT,
'CREATION_TIME' TIMESTAMP,
'STATUS' SHORTINT,
PRIMARY KEY ('id'));

DROP FUNCTION IF EXISTS SSHA;
DROP FUNCTION IF EXISTS __COMPUTE_SSHA;
DROP FUNCTION IF EXISTS VERIFY_SSHA;

delimiter //
CREATE FUNCTION __COMPUTE_SSHA(secret VARCHAR(64), salt BINARY(8)) RETURNS VARCHAR(128) DETERMINISTIC READS SQL DATA
BEGIN
	SET @hashedValue := SHA1(concat(secret, salt));
	RETURN CONCAT('{SSHA}', TO_BASE64(CONCAT(UNHEX(@hashedValue), salt)));
END//

CREATE FUNCTION SSHA(value VARCHAR(64)) RETURNS VARCHAR(128) DETERMINISTIC READS SQL DATA
BEGIN
	SET @salt := UNHEX(LEFT(MD5(RAND()), 16));
	RETURN __COMPUTE_SSHA(value, @salt);
END//

CREATE FUNCTION VERIFY_SSHA(hash VARCHAR(128), value VARCHAR(64)) RETURNS BOOLEAN DETERMINISTIC READS SQL DATA
BEGIN
	SET @salt := RIGHT(FROM_BASE64(SUBSTRING(hash, 7)), 8);
	RETURN __COMPUTE_SSHA(value, @salt) = hash;
END//

delimiter ;

GRANT EXECUTE ON FUNCTION UsersDB.SSHA to 'testuser'@'localhost';
GRANT EXECUTE ON FUNCTION UsersDB.VERIFY_SSHA to 'testuser'@'localhost';

//INSERT INTO SecurityAnswers (uid, givenname, email, question1, question2, question3, answer1, answer2, answer3)
//	VALUES ('user','Name' , 'wagtail@mail.ru',
//	'What was your childhood nickname? ', 'In what city did you meet your spuse/significant other?', 'What is the name of your favorite childhood friend? ',
//	SSHA('nickname'), SSHA('other'), SSHA('friend'));
	
SELECT * FROM SecurityAnswers;